version: '3'

services:
  mongodb:
    image: mongo
    container_name: deepchecks_db
    ports:
      - "27017:27017"
    env_file:
      - ./.env
    networks:
      - deepchecks-network
    volumes:
      - mongodb_data:/data/db
  app:
    container_name: deepchecks_app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - redis
    ports:
      - "8001:8001"
    env_file:
      - ./.env
    volumes:
      - ./:/app  # mount volume locally  for development purpose only
    networks:
      - deepchecks-network

  redis:
    image: "redis:alpine"
    container_name: deepchecks_redis
    volumes:
      - redis_data:/data/
    ports:
      - '6379:6379'
    networks:
      - deepchecks-network


  mongo-express: # This service is only for Development
    container_name: ddeepchecks_mongo_express
    image: mongo-express
    ports:
      - "7000:8081"
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME:-user}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD:-password}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: ${ME_CONFIG_MONGODB_ENABLE_ADMIN:-true}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: '27017'
      ME_CONFIG_MONGODB_SERVER: 'mongodb' # mongo db service name
    networks:
      - deepchecks-network
networks:
  deepchecks-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local